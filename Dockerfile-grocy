FROM php:7.2-fpm-alpine
LABEL maintainer "Talmai Oliveira <to@talm.ai>, James Addison <jay@jp-hosting.net>"

ARG GROCY_VERSION=v2.6.1

# Optionally authenticate with GitHub using an API token
#
# This can reduce instances of download rate limiting by GitHub
# https://developer.github.com/v3/#rate-limiting
#
# This value is *not* assigned to a variable using the ENV instruction,
# since those variables are persisted in the resulting image and could leak
# developer credentials
# https://docs.docker.com/engine/reference/builder/#env
ARG GITHUB_API_TOKEN

# Install system dependencies
RUN     apk update && \
        apk add --no-cache \
            composer \
            yarn \
            git \
            wget \
            freetype \
            libpng \
            libjpeg-turbo \
            freetype-dev \
            libpng-dev \
            libjpeg-turbo-dev && \
        docker-php-ext-configure gd \
            --with-gd \
            --with-freetype-dir=/usr/include/ \
            --with-png-dir=/usr/include/ \
            --with-jpeg-dir=/usr/include/ && \
        NPROC=$(grep -c ^processor /proc/cpuinfo 2>/dev/null || 1) && \
        docker-php-ext-install -j${NPROC} gd && \
        chown -R www-data /var/www

USER www-data
WORKDIR /var/www

# Extract application release package
RUN     set -o pipefail && \
        wget --header "Authorization: ${GITHUB_API_TOKEN}" -t 3 -T 30 -nv "https://github.com/grocy/grocy/archive/${GROCY_VERSION}.tar.gz" && \
        tar xzf "${GROCY_VERSION}.tar.gz" && \
        rm "${GROCY_VERSION}.tar.gz" && \
        mv grocy-*/* . && \
        rm -r grocy-* && \
        mkdir data/viewcache && \
        cp config-dist.php data/config.php

# Install application dependencies
RUN     COMPOSER_OAUTH=${GITHUB_API_TOKEN:+"\"github.com\": \"${GITHUB_API_TOKEN}\""} && \
        COMPOSER_AUTH="{\"github-oauth\": { ${COMPOSER_OAUTH} }}" composer install --no-interaction --no-dev --optimize-autoloader && \
        yarn install --modules-folder /var/www/public/node_modules --production

# Prune vendored content
RUN     find /var/www/public/node_modules \
            -type f \
            -not -name '*.js' \
            -and -not -name '*.css' \
            -and -not -name 'search_plus_index.json' \
            -exec rm {} \; && \
        find /var/www/public/node_modules \
            -type d \
            -name 'docs' \
            -exec rm {} \;

VOLUME ["/var/www/data", "/var/www/public"]

EXPOSE 9000

ENTRYPOINT ["php-fpm", "--nodaemonize"]
